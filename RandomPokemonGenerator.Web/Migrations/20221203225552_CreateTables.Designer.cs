// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RandomPokemonGenerator.Web.Data;

#nullable disable

namespace RandomPokemonGenerator.Web.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20221203225552_CreateTables")]
    partial class CreateTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FormatListPokemonSet", b =>
                {
                    b.Property<int>("FormatListsId")
                        .HasColumnType("int");

                    b.Property<int>("PokemonSetsId")
                        .HasColumnType("int");

                    b.HasKey("FormatListsId", "PokemonSetsId");

                    b.HasIndex("PokemonSetsId");

                    b.ToTable("FormatListPokemonSet");
                });

            modelBuilder.Entity("RandomPokemonGenerator.Web.Models.FormatList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FormatLists");
                });

            modelBuilder.Entity("RandomPokemonGenerator.Web.Models.PokemonSet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ability")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AtkEffortValue")
                        .HasColumnType("int");

                    b.Property<int>("AtkIndividualValue")
                        .HasColumnType("int");

                    b.Property<int>("DefEffortValue")
                        .HasColumnType("int");

                    b.Property<int>("DefIndividualValue")
                        .HasColumnType("int");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HpEffortValue")
                        .HasColumnType("int");

                    b.Property<int>("HpIndividualValue")
                        .HasColumnType("int");

                    b.Property<string>("Item")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Level")
                        .HasColumnType("int");

                    b.Property<string>("MoveFour")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoveOne")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoveThree")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoveTwo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nature")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SetName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SpaEffortValue")
                        .HasColumnType("int");

                    b.Property<int>("SpaIndividualValue")
                        .HasColumnType("int");

                    b.Property<int>("SpdEffortValue")
                        .HasColumnType("int");

                    b.Property<int>("SpdIndividualValue")
                        .HasColumnType("int");

                    b.Property<int>("SpeEffortValue")
                        .HasColumnType("int");

                    b.Property<int>("SpeIndividualValue")
                        .HasColumnType("int");

                    b.Property<string>("Species")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TerastallizeType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PokemonSets");
                });

            modelBuilder.Entity("FormatListPokemonSet", b =>
                {
                    b.HasOne("RandomPokemonGenerator.Web.Models.FormatList", null)
                        .WithMany()
                        .HasForeignKey("FormatListsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RandomPokemonGenerator.Web.Models.PokemonSet", null)
                        .WithMany()
                        .HasForeignKey("PokemonSetsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
